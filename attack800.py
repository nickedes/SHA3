

def merge12slices(A, i, slice12_0, slice12_1):
    """
    """
    values = []
    for slice12_0i in slice12_0:
        for slice12_1i in slice12_1:
            [a0_0, a0_1, a0_2, a0_3, a0_4, a0_5, a0_6, a0_7, a0_8, a0_9, a0_10, a0_11, a1_3, a1_4, a1_5, a1_6, a1_7, a1_8, a1_9, a1_10, a1_11, a1_12, a1_13, a1_14, a2_4, a2_5, a2_6, a2_7, a2_8, a2_9, a2_10, a2_11, a2_12, a2_13, a2_14, a2_15, b0_1, b0_2, b0_3, b0_4, b0_5, b0_6, b0_7, b0_8, b0_9, b0_10, b0_11, b0_12, b1_10, b1_11, b1_12, b1_13, b1_14, b1_15, b1_16, b1_17, b1_18, b1_19, b1_20, b1_21, b2_12, b2_13, b2_14, b2_15, b2_16, b2_17, b2_18, b2_19, b2_20, b2_21, b2_22, b2_23,
                        c0_30, c0_31, c0_0, c0_1, c0_2, c0_3, c0_4, c0_5, c0_6, c0_7, c0_8, c0_9, c1_6, c1_7, c1_8, c1_9, c1_10, c1_11, c1_12, c1_13, c1_14, c1_15, c1_16, c1_17, c2_11, c2_12, c2_13, c2_14, c2_15, c2_16, c2_17, c2_18, c2_19, c2_20, c2_21, c2_22,
                        e0_27, e0_28, e0_29, e0_30, e0_31, e0_0,  e0_1, e0_2, e0_3, e0_4, e0_5, e0_6, e1_20, e1_21, e1_22, e1_23, e1_24, e1_25, e1_26, e1_27, e1_28, e1_29, e1_30, e1_31] = slice12_0i
            [a0_12, a0_13, a0_14, a0_15, a0_16, a0_17, a0_18, a0_19, a0_20, a0_21, a0_22, a0_23, a1_15, a1_16, a1_17, a1_18, a1_19, a1_20, a1_21, a1_22, a1_23, a1_24, a1_25, a1_26, a2_16, a2_17, a2_18, a2_19, a2_20, a2_21, a2_22, a2_23, a2_24, a2_25, a2_26, a2_27, b0_13, b0_14, b0_15, b0_16, b0_17, b0_18, b0_19, b0_20, b0_21, b0_22, b0_23, b0_24, b1_22, b1_23, b1_24, b1_25, b1_26, b1_27, b1_28, b1_29, b1_30, b1_31, b1_0, b1_1, b2_24, b2_25, b2_26, b2_27, b2_28, b2_29, b2_30, b2_31, b2_0, b2_1, b2_2, b2_3,
                        c0_10, c0_11, c0_12, c0_13, c0_14, c0_15, c0_16, c0_17, c0_18, c0_19, c0_20, c0_21, c1_18, c1_19, c1_20, c1_21, c1_22, c1_23, c1_24, c1_25, c1_26, c1_27, c1_28, c1_29, c2_23, c2_24, c2_25, c2_26, c2_27, c2_28, c2_29, c2_30, c2_31, c2_0, c2_1, c2_2,
                        e0_7, e0_8, e0_9, e0_10, e0_11, e0_12,  e0_13, e0_14, e0_15, e0_16, e0_17, e0_18, e1_0, e1_1, e1_2, e1_3, e1_4, e1_5, e1_6, e1_7, e1_8, e1_9, e1_10, e1_11] = slice12_1i

            phi12_0 = (a1_12 + a2_12) % 2 + 2*((a1_13 + a2_13)%2) + 4*((a1_14 + a2_14)%2) + 8*a2_15 + 16*((b1_13 + b2_13)%2) + 32*((b1_14 + b2_14)%2) + 64*((b1_15 + b2_15)%2) + 128*((b1_16 + b2_16)%2) + 256*((b1_17 + b2_17)%2)+ 512*((b1_18 + b2_18)%2)+ 1024*((b1_19 + b2_19)%2)+ 2048*((b1_20 + b2_20)%2)+ 4096*((b1_21 + b2_21)%2)+ 8192*b2_22 + 16384*b2_23
                        + 32768*((c1_11 + c2_11)%2) + 65536*((c1_12 + c2_12)%2) + 131072*((c1_13 + c2_13)%2) + 262144*((c1_14 + c2_14)%2) + 524288*((c1_15 + c2_15)%2) + 1048576*((c1_16 + c2_16)%2) + 2097152*((c1_17 + c2_17)%2) + 4194304*c2_18 + 
                        8388608*c2_19 + 16777216*c2_20 + 33554432*c2_21 + 67108864*e0_0 + 134217728*e0_1 + 268435456*e0_2 + 536870912*e0_3 + 1073741824*e0_4 + 2147483648*e0_5 + 4294967296*e0_6

            phi12_1 = a0_12 + 2*a0_13 + 4*a0_14 + 8*((a0_15 + a1_15)%2) + 16*b0_13 + 32*b0_14 + 64*b0_15 + 128*b0_16 + 256*b0_17 + 512*b0_18 + 1024*b0_19 + 2048*b0_20 + 4096*b0_21 + 8192*((b0_22 + b1_22)%2) + 16384*((b0_23 + b1_23)%2)
                        + 32768*c0_11 + 65536*c0_12 + 131072*c0_13 + 262144*c0_14 + 524288*c0_15 + 1048576*c0_16 + 2097152*c0_17 + 4194304*((c0_18+c1_18)%2) + 8388608*((c0_19+c1_19)%2) + 16777216*((c0_20+c1_20)%2) + 33554432*((c0_21+c1_21)%2)
                        + 67108864*e1_0 + 134217728*e1_1 + 268435456*e1_2 + 536870912*e1_3 + 1073741824*e1_4 + 2147483648*e1_5 + 4294967296*e1_6

            if phi12_0 == phi12_1:
                slice11 = [ [a0_11, b2_23, c2_22, 0, 0], [0, e1_31, a1_14, 0, 0], [b0_12, c1_17, 0, 0, 0], [e0_6, a2_15, b1_21, 0, 0], [c0_9, 0, 0, 0, 0]]
                slice12 = [ [a0_12, b2_24, c2_23, 0, 0], [0, e1_0, a1_15, 0, 0], [b0_13, c1_18, 0, 0, 0], [e0_7, a2_16, b1_22, 0, 0], [c0_10, 0, 0, 0, 0]]

                result = check( slice11, slice12, A, i + 12)
                # if output slice bits satisfied
                if result:
                    values.append([a0_0, a0_1, a0_2, a0_3, a0_4, a0_5, a0_6, a0_7, a0_8, a0_9, a0_10, a0_11, a0_12, a0_13, a0_14, a0_15, a0_16, a0_17, a0_18, a0_19, a0_20, a0_21, a0_22, a0_23, 
                        a1_3, a1_4, a1_5, a1_6, a1_7, a1_8, a1_9, a1_10, a1_11, a1_12, a1_13, a1_14, a1_15, a1_16, a1_17, a1_18, a1_19, a1_20, a1_21, a1_22, a1_23, a1_24, a1_25, a1_26,
                        a2_4, a2_5, a2_6, a2_7, a2_8, a2_9, a2_10, a2_11, a2_12, a2_13, a2_14, a2_15, a2_16, a2_17, a2_18, a2_19, a2_20, a2_21, a2_22, a2_23, a2_24, a2_25, a2_26, a2_27, 
                        b0_1, b0_2, b0_3, b0_4, b0_5, b0_6, b0_7, b0_8, b0_9, b0_10, b0_11, b0_12, b0_13, b0_14, b0_15, b0_16, b0_17, b0_18, b0_19, b0_20, b0_21, b0_22, b0_23, b0_24, 
                        b1_10, b1_11, b1_12, b1_13, b1_14, b1_15, b1_16, b1_17, b1_18, b1_19, b1_20, b1_21, b1_22, b1_23, b1_24, b1_25, b1_26, b1_27, b1_28, b1_29, b1_30, b1_31, b1_0, b1_1, 
                        b2_12, b2_13, b2_14, b2_15, b2_16, b2_17, b2_18, b2_19, b2_20, b2_21, b2_22, b2_23, b2_24, b2_25, b2_26, b2_27, b2_28, b2_29, b2_30, b2_31, b2_0, b2_1, b2_2, b2_3,
                        c0_30, c0_31, c0_0, c0_1, c0_2, c0_3, c0_4, c0_5, c0_6, c0_7, c0_8, c0_9, c0_10, c0_11, c0_12, c0_13, c0_14, c0_15, c0_16, c0_17, c0_18, c0_19, c0_20, c0_21, 
                        c1_6, c1_7, c1_8, c1_9, c1_10, c1_11, c1_12, c1_13, c1_14, c1_15, c1_16, c1_17, c1_18, c1_19, c1_20, c1_21, c1_22, c1_23, c1_24, c1_25, c1_26, c1_27, c1_28, c1_29, 
                        c2_11, c2_12, c2_13, c2_14, c2_15, c2_16, c2_17, c2_18, c2_19, c2_20, c2_21, c2_22, c2_23, c2_24, c2_25, c2_26, c2_27, c2_28, c2_29, c2_30, c2_31, c2_0, c2_1, c2_2,
                        e0_27, e0_28, e0_29, e0_30, e0_31, e0_0, e0_1, e0_2, e0_3, e0_4, e0_5, e0_6, e0_7, e0_8, e0_9, e0_10, e0_11, e0_12,  e0_13, e0_14, e0_15, e0_16, e0_17, e0_18, 
                        e1_20, e1_21, e1_22, e1_23, e1_24, e1_25, e1_26, e1_27, e1_28, e1_29, e1_30, e1_31, e1_0, e1_1, e1_2, e1_3, e1_4, e1_5, e1_6, e1_7, e1_8, e1_9, e1_10, e1_11
                        ])
    return values


def merge24_6slices(A, i, slices24, slices6):
    """
    """
    values = []
    for slice24i in slices24:
        for slice6i in slices6:
            [a0_0, a0_1, a0_2, a0_3, a0_4, a0_5, a0_6, a0_7, a0_8, a0_9, a0_10, a0_11, a0_12, a0_13, a0_14, a0_15, a0_16, a0_17, a0_18, a0_19, a0_20, a0_21, a0_22, a0_23, 
                        a1_3, a1_4, a1_5, a1_6, a1_7, a1_8, a1_9, a1_10, a1_11, a1_12, a1_13, a1_14, a1_15, a1_16, a1_17, a1_18, a1_19, a1_20, a1_21, a1_22, a1_23, a1_24, a1_25, a1_26,
                        a2_4, a2_5, a2_6, a2_7, a2_8, a2_9, a2_10, a2_11, a2_12, a2_13, a2_14, a2_15, a2_16, a2_17, a2_18, a2_19, a2_20, a2_21, a2_22, a2_23, a2_24, a2_25, a2_26, a2_27, 
                        b0_1, b0_2, b0_3, b0_4, b0_5, b0_6, b0_7, b0_8, b0_9, b0_10, b0_11, b0_12, b0_13, b0_14, b0_15, b0_16, b0_17, b0_18, b0_19, b0_20, b0_21, b0_22, b0_23, b0_24, 
                        b1_10, b1_11, b1_12, b1_13, b1_14, b1_15, b1_16, b1_17, b1_18, b1_19, b1_20, b1_21, b1_22, b1_23, b1_24, b1_25, b1_26, b1_27, b1_28, b1_29, b1_30, b1_31, b1_0, b1_1, 
                        b2_12, b2_13, b2_14, b2_15, b2_16, b2_17, b2_18, b2_19, b2_20, b2_21, b2_22, b2_23, b2_24, b2_25, b2_26, b2_27, b2_28, b2_29, b2_30, b2_31, b2_0, b2_1, b2_2, b2_3,
                        c0_30, c0_31, c0_0, c0_1, c0_2, c0_3, c0_4, c0_5, c0_6, c0_7, c0_8, c0_9, c0_10, c0_11, c0_12, c0_13, c0_14, c0_15, c0_16, c0_17, c0_18, c0_19, c0_20, c0_21, 
                        c1_6, c1_7, c1_8, c1_9, c1_10, c1_11, c1_12, c1_13, c1_14, c1_15, c1_16, c1_17, c1_18, c1_19, c1_20, c1_21, c1_22, c1_23, c1_24, c1_25, c1_26, c1_27, c1_28, c1_29, 
                        c2_11, c2_12, c2_13, c2_14, c2_15, c2_16, c2_17, c2_18, c2_19, c2_20, c2_21, c2_22, c2_23, c2_24, c2_25, c2_26, c2_27, c2_28, c2_29, c2_30, c2_31, c2_0, c2_1, c2_2,
                        e0_27, e0_28, e0_29, e0_30, e0_31, e0_0, e0_1, e0_2, e0_3, e0_4, e0_5, e0_6, e0_7, e0_8, e0_9, e0_10, e0_11, e0_12,  e0_13, e0_14, e0_15, e0_16, e0_17, e0_18, 
                        e1_20, e1_21, e1_22, e1_23, e1_24, e1_25, e1_26, e1_27, e1_28, e1_29, e1_30, e1_31, e1_0, e1_1, e1_2, e1_3, e1_4, e1_5, e1_6, e1_7, e1_8, e1_9, e1_10, e1_11
                        ] = slice24i
            [a0_24, a0_25, a0_26, a0_27, a0_28, a0_29, a1_27, a1_28, a1_29, a1_30, a1_31, a1_0, a2_28, a2_29, a2_30, a2_31, a2_0, a2_1, b0_25, b0_26, b0_27, b0_28, b0_29, b0_30, b1_2, b1_3, b1_4, b1_5, b1_6, b1_7, b2_4, b2_5, b2_6, b2_7, b2_8, b2_9, c0_22, c0_23, c0_24, c0_25, c0_26, c0_27, c1_30, c1_31, c1_0, c1_1, c1_2, c1_3, c2_3, c2_4, c2_5, c2_6, c2_7, c2_8, e0_19, e0_20, e0_21, e0_22, e0_23, e0_24, e1_12, e1_13, e1_14, e1_15, e1_16, e1_17] = slice6i

            phi24_n = (a1_24 + a2_24)%2 + 2*((a2_25 + a1_25)%2) + 4*((a1_26 + a2_26)%2) + 8*((b1_25 + b2_25)%2) + 16*((b1_26 + b2_26)%2) + 32*((b1_27 + b2_27)%2) + 64*((b1_28 + b2_28)%2) + 128*((b1_29 + b2_29)%2) + 256*((b1_30 + b2_30)%2) + 512*((b0_2 + b2_2)%2) + 1024*((b0_3 + b2_3)%2) + 2048*(b0_4) + 4096*(b0_5) + 8192*(b0_6) + 16384*(b0_7) + 32768*c0_3 + 65536*((c1_22 + c2_22)%2) + 131072*((c1_23 + c2_23)%2) + 262144*((c1_24 + c2_24)%2) + 524288*((c1_25 + c2_25)%2) + 1048576*((c1_26 + c2_26)%2)+ 2097152*((c1_27 + c2_27)%2) + 4194304*((c0_30 + c2_30)%2) + 8388608*((c0_31 + c2_31)%2) + 16777216((c0_0 + c2_0)%2) + 33554432*((c0_1 + c2_1)%2) + 67108864*((c0_2 + c2_2)%2) + 134217728*((c0_6 + c1_6)%2) + 268435456*((c0_7 + c1_7)%2) + 536870912*((c0_8 + c1_8)%2) + 1073741824*e1_20 + 2147483648*e1_21 + 4294967296*e1_22 + 8589934592*e1_23 + 17179869184*e1_24 + 34359738368*e0_12 + 68719476736*e0_13 + 137438953472*e0_14 + 274877906944*e0_15 + 549755813888*e0_16 + 1099511627776*e0_17

            phi6 = a0_24 + 2*a0_25 + 4*a0_26 + 8*(b0_25) + 16*(b0_26) + 32*(b0_27) + 64*(b0_28) + 128*(b0_29) + 256*(b0_30) + 512*(b1_2) + 1024*(b1_3) + 2048*((b1_4 + b2_4)%2) + 4096*((b1_5 + b2_5)%2) + 8192*((b1_6 + b2_6)%2) + 16384*((b1_7 + b2_7)%2)+ 32768*((c1_3 + c2_3)%2) + 65536*(c0_22) + 131072*(c0_23) + 262144*(c0_24) + 524288*(c0_25) + 1048576*(c0_26)+ 2097152*(c0_27) + 4194304*(c1_30) + 8388608*(c1_31) + 16777216*(c1_0) + 33554432*(c1_1) + 67108864*(c1_2) + 134217728*(c2_6) + 268435456*(c2_7) + 536870912*(c2_8) + 1073741824*e0_20 + 2147483648*e0_21 + 4294967296*e0_22 + 8589934592*e0_23 + 17179869184*e0_24 + 34359738368*e1_12 + 68719476736*e1_13 + 137438953472*e1_14 + 274877906944*e1_15 + 549755813888*e1_16 + 1099511627776*e1_17

            if phi24_n == phi6:
                slice23 = [ [a0_23, b2_3, c2_2, 0, 0], [0, e1_11, a1_26, 0, 0], [b0_24, c1_29, 0, 0, 0], [e0_18, a2_27, b1_1, 0, 0], [c0_21, 0, 0, 0, 0] ]
                slice24 = [ [a0_24, b2_4, c2_3, 0, 0], [0, e1_12, a1_27, 0, 0], [b0_25, c1_30, 0, 0, 0], [e0_19, a2_28, b1_2, 0, 0], [c0_22, 0, 0, 0, 0] ]
                result = check( slice23, slice24, A, 24)
                if result:
                    values.append([
                        a0_0, a0_1, a0_2, a0_3, a0_4, a0_5, a0_6, a0_7, a0_8, a0_9, a0_10, a0_11, a0_12, a0_13, a0_14, a0_15, a0_16, a0_17, a0_18, a0_19, a0_20, a0_21, a0_22, a0_23, a0_24, a0_25, a0_26, a0_27, a0_28, a0_29,
                        a1_3, a1_4, a1_5, a1_6, a1_7, a1_8, a1_9, a1_10, a1_11, a1_12, a1_13, a1_14, a1_15, a1_16, a1_17, a1_18, a1_19, a1_20, a1_21, a1_22, a1_23, a1_24, a1_25, a1_26, a1_27, a1_28, a1_29, a1_30, a1_31, a1_0, 
                        a2_4, a2_5, a2_6, a2_7, a2_8, a2_9, a2_10, a2_11, a2_12, a2_13, a2_14, a2_15, a2_16, a2_17, a2_18, a2_19, a2_20, a2_21, a2_22, a2_23, a2_24, a2_25, a2_26, a2_27, a2_28, a2_29, a2_30, a2_31, a2_0, a2_1, 
                        b0_1, b0_2, b0_3, b0_4, b0_5, b0_6, b0_7, b0_8, b0_9, b0_10, b0_11, b0_12, b0_13, b0_14, b0_15, b0_16, b0_17, b0_18, b0_19, b0_20, b0_21, b0_22, b0_23, b0_24, b0_25, b0_26, b0_27, b0_28, b0_29, b0_30, 
                        b1_10, b1_11, b1_12, b1_13, b1_14, b1_15, b1_16, b1_17, b1_18, b1_19, b1_20, b1_21, b1_22, b1_23, b1_24, b1_25, b1_26, b1_27, b1_28, b1_29, b1_30, b1_31, b1_0, b1_1, b1_2, b1_3, b1_4, b1_5, b1_6, b1_7, 
                        b2_12, b2_13, b2_14, b2_15, b2_16, b2_17, b2_18, b2_19, b2_20, b2_21, b2_22, b2_23, b2_24, b2_25, b2_26, b2_27, b2_28, b2_29, b2_30, b2_31, b2_0, b2_1, b2_2, b2_3, b2_4, b2_5, b2_6, b2_7, b2_8, b2_9, 
                        c0_30, c0_31, c0_0, c0_1, c0_2, c0_3, c0_4, c0_5, c0_6, c0_7, c0_8, c0_9, c0_10, c0_11, c0_12, c0_13, c0_14, c0_15, c0_16, c0_17, c0_18, c0_19, c0_20, c0_21, c0_22, c0_23, c0_24, c0_25, c0_26, c0_27, 
                        c1_6, c1_7, c1_8, c1_9, c1_10, c1_11, c1_12, c1_13, c1_14, c1_15, c1_16, c1_17, c1_18, c1_19, c1_20, c1_21, c1_22, c1_23, c1_24, c1_25, c1_26, c1_27, c1_28, c1_29, c1_30, c1_31, c1_0, c1_1, c1_2, c1_3, 
                        c2_11, c2_12, c2_13, c2_14, c2_15, c2_16, c2_17, c2_18, c2_19, c2_20, c2_21, c2_22, c2_23, c2_24, c2_25, c2_26, c2_27, c2_28, c2_29, c2_30, c2_31, c2_0, c2_1, c2_2, c2_3, c2_4, c2_5, c2_6, c2_7, c2_8, 
                        e0_27, e0_28, e0_29, e0_30, e0_31, e0_0, e0_1, e0_2, e0_3, e0_4, e0_5, e0_6, e0_7, e0_8, e0_9, e0_10, e0_11, e0_12,  e0_13, e0_14, e0_15, e0_16, e0_17, e0_18, e0_19, e0_20, e0_21, e0_22, e0_23, e0_24,  
                        e1_20, e1_21, e1_22, e1_23, e1_24, e1_25, e1_26, e1_27, e1_28, e1_29, e1_30, e1_31, e1_0, e1_1, e1_2, e1_3, e1_4, e1_5, e1_6, e1_7, e1_8, e1_9, e1_10, e1_11, e1_12, e1_13, e1_14, e1_15, e1_16, e1_17
                        ])
    return values


def merge24_6slices(A, i, slices30, slices2):
    """
    """
    values = []
    for slice30i in slices30:
        for slice2i in slices2:
            [
                a0_0, a0_1, a0_2, a0_3, a0_4, a0_5, a0_6, a0_7, a0_8, a0_9, a0_10, a0_11, a0_12, a0_13, a0_14, a0_15, a0_16, a0_17, a0_18, a0_19, a0_20, a0_21, a0_22, a0_23, a0_24, a0_25, a0_26, a0_27, a0_28, a0_29,
                a1_3, a1_4, a1_5, a1_6, a1_7, a1_8, a1_9, a1_10, a1_11, a1_12, a1_13, a1_14, a1_15, a1_16, a1_17, a1_18, a1_19, a1_20, a1_21, a1_22, a1_23, a1_24, a1_25, a1_26, a1_27, a1_28, a1_29, a1_30, a1_31, a1_0, 
                a2_4, a2_5, a2_6, a2_7, a2_8, a2_9, a2_10, a2_11, a2_12, a2_13, a2_14, a2_15, a2_16, a2_17, a2_18, a2_19, a2_20, a2_21, a2_22, a2_23, a2_24, a2_25, a2_26, a2_27, a2_28, a2_29, a2_30, a2_31, a2_0, a2_1, 
                b0_1, b0_2, b0_3, b0_4, b0_5, b0_6, b0_7, b0_8, b0_9, b0_10, b0_11, b0_12, b0_13, b0_14, b0_15, b0_16, b0_17, b0_18, b0_19, b0_20, b0_21, b0_22, b0_23, b0_24, b0_25, b0_26, b0_27, b0_28, b0_29, b0_30, 
                b1_10, b1_11, b1_12, b1_13, b1_14, b1_15, b1_16, b1_17, b1_18, b1_19, b1_20, b1_21, b1_22, b1_23, b1_24, b1_25, b1_26, b1_27, b1_28, b1_29, b1_30, b1_31, b1_0, b1_1, b1_2, b1_3, b1_4, b1_5, b1_6, b1_7, 
                b2_12, b2_13, b2_14, b2_15, b2_16, b2_17, b2_18, b2_19, b2_20, b2_21, b2_22, b2_23, b2_24, b2_25, b2_26, b2_27, b2_28, b2_29, b2_30, b2_31, b2_0, b2_1, b2_2, b2_3, b2_4, b2_5, b2_6, b2_7, b2_8, b2_9, 
                c0_30, c0_31, c0_0, c0_1, c0_2, c0_3, c0_4, c0_5, c0_6, c0_7, c0_8, c0_9, c0_10, c0_11, c0_12, c0_13, c0_14, c0_15, c0_16, c0_17, c0_18, c0_19, c0_20, c0_21, c0_22, c0_23, c0_24, c0_25, c0_26, c0_27, 
                c1_6, c1_7, c1_8, c1_9, c1_10, c1_11, c1_12, c1_13, c1_14, c1_15, c1_16, c1_17, c1_18, c1_19, c1_20, c1_21, c1_22, c1_23, c1_24, c1_25, c1_26, c1_27, c1_28, c1_29, c1_30, c1_31, c1_0, c1_1, c1_2, c1_3, 
                c2_11, c2_12, c2_13, c2_14, c2_15, c2_16, c2_17, c2_18, c2_19, c2_20, c2_21, c2_22, c2_23, c2_24, c2_25, c2_26, c2_27, c2_28, c2_29, c2_30, c2_31, c2_0, c2_1, c2_2, c2_3, c2_4, c2_5, c2_6, c2_7, c2_8, 
                e0_27, e0_28, e0_29, e0_30, e0_31, e0_0, e0_1, e0_2, e0_3, e0_4, e0_5, e0_6, e0_7, e0_8, e0_9, e0_10, e0_11, e0_12,  e0_13, e0_14, e0_15, e0_16, e0_17, e0_18, e0_19, e0_20, e0_21, e0_22, e0_23, e0_24,  
                e1_20, e1_21, e1_22, e1_23, e1_24, e1_25, e1_26, e1_27, e1_28, e1_29, e1_30, e1_31, e1_0, e1_1, e1_2, e1_3, e1_4, e1_5, e1_6, e1_7, e1_8, e1_9, e1_10, e1_11, e1_12, e1_13, e1_14, e1_15, e1_16, e1_17
            ] = slice30i

            [a0_30, a0_31, a1_1, a1_2, a2_2, a2_3, b0_31, b0_0, b1_8, b1_9, b2_10, b2_11, c0_28, c0_29, c1_4, c1_5, c2_9, c2_10, e0_25, e0_26, e1_18, e1_19] = slice2i

            phi30 = 0
            phi2 = 0
            if phi30 == phi2:
                slice29 = []
                slice30 = []
                result = check( slice29, slice30, A, 30)
                if result :
                    slice31 = []
                    slice0 = []

                    result2 = check( slice31, slice0, A, 0)
                    if result2:
                        values.append(
                            [
                                a0_0, a0_1, a0_2, a0_3, a0_4, a0_5, a0_6, a0_7, a0_8, a0_9, a0_10, a0_11, a0_12, a0_13, a0_14, a0_15, a0_16, a0_17, a0_18, a0_19, a0_20, a0_21, a0_22, a0_23, a0_24, a0_25, a0_26, a0_27, a0_28, a0_29, a0_30, a0_31,
                                a1_3, a1_4, a1_5, a1_6, a1_7, a1_8, a1_9, a1_10, a1_11, a1_12, a1_13, a1_14, a1_15, a1_16, a1_17, a1_18, a1_19, a1_20, a1_21, a1_22, a1_23, a1_24, a1_25, a1_26, a1_27, a1_28, a1_29, a1_30, a1_31, a1_0, a1_1, a1_2, 
                                a2_4, a2_5, a2_6, a2_7, a2_8, a2_9, a2_10, a2_11, a2_12, a2_13, a2_14, a2_15, a2_16, a2_17, a2_18, a2_19, a2_20, a2_21, a2_22, a2_23, a2_24, a2_25, a2_26, a2_27, a2_28, a2_29, a2_30, a2_31, a2_0, a2_1, a2_2, a2_3, 
                                b0_1, b0_2, b0_3, b0_4, b0_5, b0_6, b0_7, b0_8, b0_9, b0_10, b0_11, b0_12, b0_13, b0_14, b0_15, b0_16, b0_17, b0_18, b0_19, b0_20, b0_21, b0_22, b0_23, b0_24, b0_25, b0_26, b0_27, b0_28, b0_29, b0_30, b0_31, b0_0, 
                                b1_10, b1_11, b1_12, b1_13, b1_14, b1_15, b1_16, b1_17, b1_18, b1_19, b1_20, b1_21, b1_22, b1_23, b1_24, b1_25, b1_26, b1_27, b1_28, b1_29, b1_30, b1_31, b1_0, b1_1, b1_2, b1_3, b1_4, b1_5, b1_6, b1_7, b1_8, b1_9, 
                                b2_12, b2_13, b2_14, b2_15, b2_16, b2_17, b2_18, b2_19, b2_20, b2_21, b2_22, b2_23, b2_24, b2_25, b2_26, b2_27, b2_28, b2_29, b2_30, b2_31, b2_0, b2_1, b2_2, b2_3, b2_4, b2_5, b2_6, b2_7, b2_8, b2_9, b2_10, b2_11, 
                                c0_30, c0_31, c0_0, c0_1, c0_2, c0_3, c0_4, c0_5, c0_6, c0_7, c0_8, c0_9, c0_10, c0_11, c0_12, c0_13, c0_14, c0_15, c0_16, c0_17, c0_18, c0_19, c0_20, c0_21, c0_22, c0_23, c0_24, c0_25, c0_26, c0_27, c0_28, c0_29, 
                                c1_6, c1_7, c1_8, c1_9, c1_10, c1_11, c1_12, c1_13, c1_14, c1_15, c1_16, c1_17, c1_18, c1_19, c1_20, c1_21, c1_22, c1_23, c1_24, c1_25, c1_26, c1_27, c1_28, c1_29, c1_30, c1_31, c1_0, c1_1, c1_2, c1_3, c1_4, c1_5, 
                                c2_11, c2_12, c2_13, c2_14, c2_15, c2_16, c2_17, c2_18, c2_19, c2_20, c2_21, c2_22, c2_23, c2_24, c2_25, c2_26, c2_27, c2_28, c2_29, c2_30, c2_31, c2_0, c2_1, c2_2, c2_3, c2_4, c2_5, c2_6, c2_7, c2_8, c2_9, c2_10, 
                                e0_27, e0_28, e0_29, e0_30, e0_31, e0_0, e0_1, e0_2, e0_3, e0_4, e0_5, e0_6, e0_7, e0_8, e0_9, e0_10, e0_11, e0_12,  e0_13, e0_14, e0_15, e0_16, e0_17, e0_18, e0_19, e0_20, e0_21, e0_22, e0_23, e0_24, e0_25, e0_26, 
                                e1_20, e1_21, e1_22, e1_23, e1_24, e1_25, e1_26, e1_27, e1_28, e1_29, e1_30, e1_31, e1_0, e1_1, e1_2, e1_3, e1_4, e1_5, e1_6, e1_7, e1_8, e1_9, e1_10, e1_11, e1_12, e1_13, e1_14, e1_15, e1_16, e1_17, e1_18, e1_19
                            ])
    return values
